<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="clockTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backupIconPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>