<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IsABackupToolForRunningOnComputerForMoreInformationSeeManual" xml:space="preserve">
    <value> is a backup tool for running on computer. For more information see Manual</value>
  </data>
  <data name="PasswordGenerator" xml:space="preserve">
    <value>Password generator</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>copy to clipboard</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="HereIsYourPassword" xml:space="preserve">
    <value>&lt;Here is your password&gt;</value>
  </data>
  <data name="PasswordLength" xml:space="preserve">
    <value>Password length:</value>
  </data>
  <data name="NotePasswordLengthShouldBeMoreThan20CharactersAndLessThan257CharactersRN" xml:space="preserve">
    <value>Note: Password length should be more than 20 characters and less than 257 characters
</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="PasswordIsInvalidNNitWasResetedN" xml:space="preserve">
    <value>Password is invalid.

It was reseted
</value>
  </data>
  <data name="PasswordIfNeeded" xml:space="preserve">
    <value>Password (if needed)</value>
  </data>
  <data name="GenerateNewRandomPassword" xml:space="preserve">
    <value>Generate new random password</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm password:</value>
  </data>
  <data name="EnterPassword" xml:space="preserve">
    <value>Enter password:</value>
  </data>
  <data name="LocalizationOptionsAreNotSetted" xml:space="preserve">
    <value>localization options are not setted</value>
  </data>
  <data name="SevenZMessage" xml:space="preserve">
    <value>7z message:</value>
  </data>
  <data name="Normal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="VisitProjectHomepage" xml:space="preserve">
    <value>Visit project homepage</value>
  </data>
  <data name="Use" xml:space="preserve">
    <value>Use</value>
  </data>
  <data name="CopyingFile0FromTempFolder1ToDestination2At3" xml:space="preserve">
    <value>Copying file '{0}' from temp folder '{1}' to destination '{2}' at {3}</value>
  </data>
  <data name="CouldNotStartPackerDueTo0AbortingBackup" xml:space="preserve">
    <value>Could not start packer due to {0}. Aborting backup...</value>
  </data>
  <data name="CopyingOfBackupTo0NetworkStorageSkippedBecauseItsSize1ExceededSpecifiedLimit2" xml:space="preserve">
    <value>Copying of backup to '{0}' network storage skipped because its size {1} exceeded specified limit {2}</value>
  </data>
  <data name="BackupFinishedSuccesfully" xml:space="preserve">
    <value>Backup finished succesfully!</value>
  </data>
  <data name="BackupReport" xml:space="preserve">
    <value>Backup Report</value>
  </data>
  <data name="ConfirmationIsNotEqualToPassword" xml:space="preserve">
    <value>Confirmation is not equal to password</value>
  </data>
  <data name="AnUnexpectedErrorOccuredNNpleaseContactTheDevelopersWithInformationSavedOnYourDesktopInN0NNapplicationWillNowClose" xml:space="preserve">
    <value>An unexpected error occured

Please contact the developers with information saved on your desktop in
"{0}"

Application will now close</value>
  </data>
  <data name="BeforeBackupTask" xml:space="preserve">
    <value>Before backup task: </value>
  </data>
  <data name="CouldNotKillProcess01" xml:space="preserve">
    <value>Could not kill process '{0}': {1}</value>
  </data>
  <data name="CouldNotStartProcess01" xml:space="preserve">
    <value>Could not start process '{0}': {1}</value>
  </data>
  <data name="AfterBackupTask" xml:space="preserve">
    <value>After backup task: </value>
  </data>
  <data name="InProgress" xml:space="preserve">
    <value>In Progress...</value>
  </data>
  <data name="Waiting" xml:space="preserve">
    <value>Waiting...</value>
  </data>
  <data name="FinishedSuccesfully" xml:space="preserve">
    <value>Finished Succesfully</value>
  </data>
  <data name="FinishedWithErrors" xml:space="preserve">
    <value>Finished With Errors</value>
  </data>
  <data name="PackingDataInAnImage" xml:space="preserve">
    <value>Packing data in an image</value>
  </data>
  <data name="GetStateOfSourceItemsAndStorages" xml:space="preserve">
    <value>Get state of source items and storages</value>
  </data>
  <data name="GetStateOfStorage" xml:space="preserve">
    <value>Get state of storage</value>
  </data>
  <data name="GetStateOfSourceItem" xml:space="preserve">
    <value>Get state of source item "{0}"</value>
  </data>
  <data name="GetStateOfFileFileName" xml:space="preserve">
    <value>Get state of file "{0}"</value>
  </data>
  <data name="WriteStateToStorage" xml:space="preserve">
    <value>Write state</value>
  </data>
  <data name="IncrementalBackup" xml:space="preserve">
    <value>Incremental Backup</value>
  </data>
  <data name="CalculateIncrementedVersionForStorage" xml:space="preserve">
    <value>Calculate incremented version</value>
  </data>
  <data name="WriteSourceFilesToStorage" xml:space="preserve">
    <value>Write files to storage</value>
  </data>
  <data name="WriteSourceFileToStorage" xml:space="preserve">
    <value>Write file "{0}"</value>
  </data>
  <data name="WriteIncrementedVersionToStorage" xml:space="preserve">
    <value>Write incremented version to storage</value>
  </data>
  <data name="WriteIntegrityVerificationScriptsToStorage" xml:space="preserve">
    <value>Write integrity verification scripts</value>
  </data>
  <data name="IntegrityVerificationScriptPs1" xml:space="preserve">
    <value>Integrity verification script.ps1</value>
  </data>
  <data name="IntegrityVerificationScriptSh" xml:space="preserve">
    <value>Integrity verification script.sh</value>
  </data>
  <data name="FolderStorageFailure" xml:space="preserve">
    <value>Storage directory "{0}" was not found.

Please update storage settings.</value>
  </data>
  <data name="DeleteUnversionedFilesStorage" xml:space="preserve">
    <value>Delete uncompleted backups from storage</value>
  </data>
  <data name="Successful" xml:space="preserve">
    <value>Successful</value>
  </data>
  <data name="Errors" xml:space="preserve">
    <value>Errors</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="BackupWasPartialDueToStorageQuota" xml:space="preserve">
    <value>Backup was partial. Due to storage quota some files were not copied. Remaining {0} files with of {1} GB.</value>
  </data>
  <data name="MoveFileToDestFolder" xml:space="preserve">
    <value>Move "{0}"</value>
  </data>
  <data name="MoveFilesTask_MoveFiles" xml:space="preserve">
    <value>Move files</value>
  </data>
  <data name="SourceItemDoesNotExist" xml:space="preserve">
    <value>Source item "{0}" does not exist.</value>
  </data>
  <data name="ThereAreNoItemsToBackup" xml:space="preserve">
    <value>There are no items to backup!</value>
  </data>
  <data name="TransformFileNameIsEmpty" xml:space="preserve">
    <value>Transform file name is empty.</value>
  </data>
  <data name="FolderStorage" xml:space="preserve">
    <value>Папка</value>
  </data>
  <data name="DestinationFolderIsNotSpecified" xml:space="preserve">
    <value>Destination folder is not specified.</value>
  </data>
  <data name="StorageIsNotSpecified" xml:space="preserve">
    <value>Storage is not specified</value>
  </data>
  <data name="HostIsNotBeSpecified" xml:space="preserve">
    <value>Host is not be specified.</value>
  </data>
  <data name="PortIsInvalid" xml:space="preserve">
    <value>Port is invalid.</value>
  </data>
  <data name="UserIsNotSpecified" xml:space="preserve">
    <value>User is not specified.</value>
  </data>
  <data name="PasswordIsNotSpecified" xml:space="preserve">
    <value>Password is not specified.</value>
  </data>
  <data name="FolderDoesNotExist" xml:space="preserve">
    <value>Folder does not exist.</value>
  </data>
</root>